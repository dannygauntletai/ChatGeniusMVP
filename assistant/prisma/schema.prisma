datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

generator client {
  provider = "prisma-client-py"
}

model User {
  id        String   @id @default(uuid())
  email     String?  @unique
  username  String   @unique
  password  String?
  avatarUrl String?
  status    String   @default("offline")
  user_status String? @default("ðŸ˜Š")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  messages      Message[]
  channels      Channel[]  @relation("ChannelMembers")
  ownedChannels Channel[]  @relation("ChannelOwner")
  Reaction      Reaction[]
  files         File[]
}

model Channel {
  id        String   @id @default(uuid())
  name      String
  isPrivate Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ownerId  String
  owner    User      @relation("ChannelOwner", fields: [ownerId], references: [id])
  members  User[]    @relation("ChannelMembers")
  messages Message[]
  files    File[]
}

model Message {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  richContent Json?

  userId    String
  user      User       @relation(fields: [userId], references: [id])
  channelId String
  channel   Channel    @relation(fields: [channelId], references: [id])
  threadId  String?
  thread    Message?   @relation("ThreadMessages", fields: [threadId], references: [id])
  replies   Message[]  @relation("ThreadMessages")
  reactions Reaction[]
}

model Reaction {
  id        String   @id @default(uuid())
  emoji     String
  createdAt DateTime @default(now())

  userId    String
  user      User    @relation(fields: [userId], references: [id])
  messageId String
  message   Message @relation(fields: [messageId], references: [id])

  @@unique([userId, messageId, emoji])
}

model File {
  id        String   @id @default(uuid())
  name      String
  url       String
  type      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  channelId String
  channel   Channel  @relation(fields: [channelId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}
